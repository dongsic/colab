import tensorflow as tf
phtsical_divices = tf.config.experimental.list_physical_devices('GPU')
import core.utils as utils
from tensorflow.python.saved_model import tag_constants
import cv2
import numpy as np


MODEL_PATH = "./checkpoints/yolov4-416" 
IOU_THRESHOLD = 0.45
SCORE_THRESHOLD = 0.25
INPUT_SIZE = 416


saved_model_loaded = tf.saved_model_loaded(MODEL_PATH, tag=[tag_constants.SERVING])
infer = saved_model_loaded.signatures['serving_default']

def main(vidoe_path):
    cap = cv2.VideoCapture(video_path)

    while cap.isOpened():
        ret, img = cap.read()
        if not ret : 
            break

        img = cv2.imread(img_path)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

        img_input = cv2.resize(img, (INPUT, INPUT_SIZE))
        img_input = img_input / 255.
        img_input = img_input[np.newaxis, ...].astype(np.float32)
        img_input = tf.constant(img_input)

        pred_bbox = infer(img_input)


        for key,value in pred_bbox:
            boxes = value[:, :, 0:4]
            pred_conf = value[:, :, 4:]
    
        boxes, scores, classes, valid_detections = tf.image.combined_non_max_suppression(
            boxes=tf.reshape(boxes, (tf.shape(boxes)[0],-1,1, 4)),
            scores=tf.reshape(
                pred_conf, (tf.shape(pred_conf)[0], -1, tf.shape(pred_conf)[-1])),
            max_output_size_per_class = 50,
            max_total_size = 50, 
            iou_threshold = IOU_THRESHOLD,
            score_threshold = SCORE_THRESHOLD
        )
        
        pred_bbox = [boxes.numpy(), scores.numpy(), classes.numpy(), valid_detections.numpy()]
        result = utils.draw_bbox(img, pred_bbox)

        result = cv2.cvtColor(np.array(result), cv2.COLOR_BGR2BGR)

        cv2.imshow('result',result)
        if cv2.waitKey(1) == ord('q'):
            break
        

if __name__ == '__main__':
    video_path = './data/road.mp4'
    main(vidoe_path)
